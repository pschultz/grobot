// Automatically generated by MockGen. DO NOT EDIT!
// Source: shell.go

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of Shell interface
type MockShell struct {
	ctrl     *gomock.Controller
	recorder *_MockShellRecorder
}

// Recorder for MockShell (not exported)
type _MockShellRecorder struct {
	mock *MockShell
}

func NewMockShell(ctrl *gomock.Controller) *MockShell {
	mock := &MockShell{ctrl: ctrl}
	mock.recorder = &_MockShellRecorder{mock}
	return mock
}

func (_m *MockShell) EXPECT() *_MockShellRecorder {
	return _m.recorder
}

func (_m *MockShell) Execute(cmdLine string, silent bool) (string, error) {
	ret := _m.ctrl.Call(_m, "Execute", cmdLine, silent)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockShellRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Execute", arg0, arg1)
}

func (_m *MockShell) SetWorkingDirectory(workingDirectory string) {
	_m.ctrl.Call(_m, "SetWorkingDirectory", workingDirectory)
}

func (_mr *_MockShellRecorder) SetWorkingDirectory(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetWorkingDirectory", arg0)
}
